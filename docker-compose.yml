version: '3.8'
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    volumes:
      - ./data:/app/data
    ports:
      - "8000:8000"
    restart: always

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    volumes:
      - ./data:/app/data
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - API_URL=http://fastapi:8000/create_recommendation
    depends_on:
      - fastapi
    restart: always

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./airflow.cfg:/opt/airflow/airflow.cfg
      - ./configs:/opt/airflow/configs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/data/airflow.db
      - AIRFLOW_CONFIG=/opt/airflow/airflow.cfg
    command: webserver
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./airflow.cfg:/opt/airflow/airflow.cfg
      - ./configs:/opt/airflow/configs
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/data/airflow.db
      - AIRFLOW_CONFIG=/opt/airflow/airflow.cfg
    command: scheduler
    depends_on:
      - airflow-webserver
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    restart: always

volumes:
  data:
  logs: